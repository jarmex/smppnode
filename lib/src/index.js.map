{"version":3,"sources":["../../src/index.js"],"names":["Session","EventEmitter","constructor","options","transport","Socket","sequence","paused","_busy","_callbacks","socket","tls","TLSSocket","timeout","setTimeout","connect","on","emit","_extractPDUs","bind","e","pdu","PDU","fromStream","command","isResponse","sequence_number","send","responseCallback","sendCallback","writable","write","toBuffer","pause","resume","close","callback","once","end","createShortcut","Object","keys","commands","prototype","url","listener","host","slashes","hostname","protocol","port","session","addCommand","commandsById","id","addTLV","tag","tlvs","tlvsById","error","errors","exports","key","constants"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign,camelcase*/\nimport { EventEmitter } from 'events';\nimport { Socket } from 'net';\nimport { parse } from 'url';\nimport { TLSSocket } from 'tls';\nimport {\n  errors,\n  constants,\n  commands,\n  tlvs,\n  tlvsById,\n  commandsById,\n} from './defs';\nimport { PDU } from './pdu';\n\nclass Session extends EventEmitter {\n  constructor(options) {\n    super(options);\n    // EventEmitter.call(this);\n    this.options = options || {};\n    let transport = new Socket();\n    this.sequence = 0;\n    this.paused = false;\n    this._busy = false;\n    this._callbacks = [];\n    if (options.socket) {\n      this.socket = options.socket;\n    } else {\n      if (options.tls) {\n        transport = new TLSSocket();\n      }\n      // check to instantiate a new socket object\n      if (options.timeout) {\n        this.socket.socket.setTimeout(options.timeout);\n      }\n      this.socket = transport.connect(this.options);\n      this.socket.on('connect', () => {\n        this.emit('connect');\n      });\n      this.socket.on('secureConnect', () => {\n        this.emit('secureConnect');\n      });\n    }\n    this.socket.on('readable', this._extractPDUs.bind(this));\n    this.socket.on('close', () => {\n      // set the callbacks to empty\n      this._callbacks = [];\n      // emit the network close to subscribers\n      this.emit('close');\n    });\n    this.socket.on('error', (e) => {\n      this.emit('error', e);\n    });\n    this.socket.on('timeout', () => {\n      this.emit('timeout', 'Socket timeout');\n    });\n  }\n  connect() {\n    this.sequence = 0;\n    this.paused = false;\n    this._busy = false;\n    this._callbacks = [];\n    this.socket.connect(this.options);\n  }\n  // read data from the stream. check if _busy can be remove without impacting the flow of data\n  _extractPDUs() {\n    if (this._busy) {\n      return;\n    }\n    this._busy = true;\n    let pdu;\n    while (!this.paused) {\n      try {\n        pdu = PDU.fromStream(this.socket);\n        if (!pdu) {\n          break;\n        }\n      } catch (e) {\n        this.emit('error', e);\n        return;\n      }\n      this.emit('pdu', pdu);\n      this.emit(pdu.command, pdu);\n      if (pdu.isResponse() && this._callbacks[pdu.sequence_number]) {\n        this._callbacks[pdu.sequence_number](pdu);\n        delete this._callbacks[pdu.sequence_number];\n      }\n    }\n    this._busy = false;\n  }\n  send(pdu, responseCallback, sendCallback) {\n    if (!this.socket.writable) {\n      return false;\n    }\n    if (!pdu.isResponse()) {\n      // when server/session pair is used to proxy smpp\n      // traffic, the sequence_number will be provided by\n      // client otherwise we generate it automatically\n      if (!pdu.sequence_number) {\n        if (this.sequence === 0x7fffffff) {\n          this.sequence = 0;\n        }\n        pdu.sequence_number = ++this.sequence;\n      }\n      if (responseCallback) {\n        this._callbacks[pdu.sequence_number] = responseCallback;\n      }\n    } else if (responseCallback && !sendCallback) {\n      sendCallback = responseCallback;\n    }\n    this.socket.write(pdu.toBuffer(), () => {\n      this.emit('send', pdu);\n      if (sendCallback) {\n        sendCallback(pdu);\n      }\n    });\n    return true;\n  }\n  pause() {\n    this.paused = true;\n  }\n  resume() {\n    this.paused = false;\n    this._extractPDUs();\n  }\n  close(callback) {\n    if (callback) {\n      this.socket.once('close', callback);\n    }\n    this.socket.end();\n  }\n}\n\nconst createShortcut = function(command) {\n  return function(options, responseCallback, sendCallback) {\n    if (typeof options === 'function') {\n      sendCallback = responseCallback;\n      responseCallback = options;\n      options = {};\n    }\n    const pdu = new PDU(command, options);\n    return this.send(pdu, responseCallback, sendCallback);\n  };\n};\n\n// verify if prototype can be added to class object\nfor (const command of Object.keys(commands)) {\n  Session.prototype[command] = createShortcut(command);\n}\n// exports.createSession  is removed. use connect\nexport const connect = (url, listener) => {\n  let options = {};\n\n  if (typeof url === 'string') {\n    options = parse(url);\n    options.host = options.slashes ? options.hostname : url;\n    options.tls = options.protocol === 'ssmpp:';\n  } else if (typeof url === 'function') {\n    listener = url;\n  } else {\n    options = url || {};\n    if (options.url) {\n      url = parse(options.url);\n      options.host = url.hostname;\n      options.port = url.port;\n      options.tls = url.protocol === 'ssmpp:';\n    }\n  }\n  options.port = options.port || (options.tls ? 3550 : 2775);\n\n  const session = new Session(options);\n  if (listener) {\n    // session.on(options.tls ? 'secureConnect' : 'connect', listener);\n  }\n\n  return session;\n};\n\nexport const addCommand = (command, options) => {\n  options.command = command;\n  commands[command] = options;\n  commandsById[options.id] = options;\n  Session.prototype[command] = createShortcut(command);\n};\n\nexport const addTLV = (tag, options) => {\n  options.tag = tag;\n  tlvs[tag] = options;\n  tlvsById[options.id] = options;\n};\n\nexport { Session };\nexport { PDU };\n\n// for (const key of Object.keys(defs)) {\n//   exports[key] = defs[key];\n// }\nfor (const error of Object.keys(errors)) {\n  exports[error] = errors[error];\n}\nfor (const key of Object.keys(constants)) {\n  exports[key] = constants[key];\n}\n"],"file":"index.js"}