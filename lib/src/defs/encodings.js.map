{"version":3,"sources":["../../../src/defs/encodings.js"],"names":["encodings","ASCII","chars","charCodes","extChars","regex","init","i","length","from","to","match","value","test","encode","result","replace","bind","push","Buffer","decode","p1","LATIN1","iconv","UCS2","Object","defineProperty","vfount","keys","find","item","writable"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign,camelcase,no-control-regex,object-shorthand,no-useless-escape*/\n\nimport iconv from 'iconv-lite';\n\nconst encodings = {};\n\nencodings.ASCII = {\n  // GSM 03.38\n  chars:\n    '@£$¥èéùìòÇ\\nØø\\rÅåΔ_ΦΓΛΩΠΨΣΘΞ\\x1BÆæßÉ !\"#¤%&\\'()*+,-./0123456789:;<=>?¡ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÑÜ§¿abcdefghijklmnopqrstuvwxyzäöñüà',\n  charCodes: {},\n  extChars: {},\n  regex: /^[@£$¥èéùìòÇ\\nØø\\rÅåΔ_ΦΓΛΩΠΨΣΘΞ\\x1BÆæßÉ !\"#¤%&\\'()*+,\\-./0-9:;<=>?¡A-ZÄÖÑÜ§¿a-zäöñüà\\f^{}\\\\[~\\]|€]*$/,\n  init: function() {\n    for (let i = 0; i < this.chars.length; i++) {\n      this.charCodes[this.chars[i]] = i;\n    }\n    const from = '\\f^{}\\\\[~]|€';\n    const to = '\\nΛ()/<=>¡e';\n    for (let i = 0; i < from.length; i++) {\n      this.extChars[from[i]] = to[i];\n      this.extChars[to[i]] = from[i];\n    }\n  },\n  match: function(value) {\n    return this.regex.test(value);\n  },\n\n  encode: function(value) {\n    const result = [];\n    value = value.replace(\n      /[\\f^{}\\\\[~\\]|€]/g,\n      function(match) {\n        return '\\x1B' + this.extChars[match];\n      }.bind(this),\n    );\n    for (let i = 0; i < value.length; i++) {\n      result.push(value[i] in this.charCodes ? this.charCodes[value[i]] : 0x20);\n    }\n    return new Buffer(result);\n  },\n  decode: function(value) {\n    let result = '';\n    for (let i = 0; i < value.length; i++) {\n      result += this.chars[value[i]] || ' ';\n    }\n    result = result.replace(\n      /\\x1B([\\nΛ()\\/<=>¡e])/g,\n      function(match, p1) {\n        return this.extChars[p1];\n      }.bind(this),\n    );\n    return result;\n  },\n};\n\nencodings.ASCII.init();\n\nencodings.LATIN1 = {\n  match: (value) =>\n    value === iconv.decode(iconv.encode(value, 'latin1'), 'latin1'),\n  encode: (value) => iconv.encode(value, 'latin1'),\n  decode: (value) => iconv.decode(value, 'latin1'),\n};\n\nencodings.UCS2 = {\n  match: (value) => true, // eslint-disable-line\n  encode: (value) => iconv.encode(value, 'utf16-be'),\n  decode: (value) => iconv.decode(value, 'utf16-be'),\n};\n\n// Object.defineProperty(encodings, 'detect', {\n//   value: (value) => {\n//     for (var key in encodings) {\n//       if (encodings[key].match(value)) {\n//         return key;\n//       }\n//     }\n//     return false;\n//   },\n// });\n\nObject.defineProperty(encodings, 'detect', {\n  value: (value) => {\n    const vfount = Object.keys(encodings).find((item) =>\n      encodings[item].match(value),\n    );\n    return vfount || false;\n  },\n});\n\nObject.defineProperty(encodings, 'default', {\n  value: 'ASCII',\n  writable: true,\n});\n\nexport { encodings };\n"],"file":"encodings.js"}