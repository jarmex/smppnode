{"version":3,"sources":["../../../src/defs/commands.js"],"names":["commands","alert_notification","id","params","source_addr_ton","type","types","int8","source_addr_npi","source_addr","cstring","esme_addr_ton","esme_addr_npi","esme_addr","bind_receiver","system_id","password","system_type","interface_version","default","addr_ton","addr_npi","address_range","bind_receiver_resp","bind_transmitter","bind_transmitter_resp","bind_transceiver","bind_transceiver_resp","broadcast_sm","service_type","message_id","priority_flag","schedule_delivery_time","filter","filters","time","validity_period","replace_if_present_flag","data_coding","sm_default_msg_id","broadcast_sm_resp","tlvMap","broadcast_area_identifier","cancel_broadcast_sm","cancel_broadcast_sm_resp","cancel_sm","dest_addr_ton","dest_addr_npi","destination_addr","cancel_sm_resp","data_sm","esm_class","registered_delivery","data_sm_resp","deliver_sm","protocol_id","short_message","buffer","message","deliver_sm_resp","enquire_link","enquire_link_resp","generic_nack","outbind","query_broadcast_sm","query_broadcast_sm_resp","query_sm","query_sm_resp","final_date","message_state","error_code","replace_sm","replace_sm_resp","submit_multi","dest_address","dest_address_array","submit_multi_resp","unsuccess_sme","unsuccess_sme_array","submit_sm","submit_sm_resp","unbind","unbind_resp","commandsById","Object","keys","forEach","command"],"mappings":"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","sourcesContent":["import { types } from './types';\nimport { filters } from './filters';\n\nconst commands = {\n  alert_notification: {\n    id: 0x00000102,\n    params: {\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      esme_addr_ton: { type: types.int8 },\n      esme_addr_npi: { type: types.int8 },\n      esme_addr: { type: types.cstring },\n    },\n  },\n  bind_receiver: {\n    id: 0x00000001,\n    params: {\n      system_id: { type: types.cstring },\n      password: { type: types.cstring },\n      system_type: { type: types.cstring },\n      interface_version: { type: types.int8, default: 0x50 },\n      addr_ton: { type: types.int8 },\n      addr_npi: { type: types.int8 },\n      address_range: { type: types.cstring },\n    },\n  },\n  bind_receiver_resp: {\n    id: 0x80000001,\n    params: {\n      system_id: { type: types.cstring },\n    },\n  },\n  bind_transmitter: {\n    id: 0x00000002,\n    params: {\n      system_id: { type: types.cstring },\n      password: { type: types.cstring },\n      system_type: { type: types.cstring },\n      interface_version: { type: types.int8, default: 0x50 },\n      addr_ton: { type: types.int8 },\n      addr_npi: { type: types.int8 },\n      address_range: { type: types.cstring },\n    },\n  },\n  bind_transmitter_resp: {\n    id: 0x80000002,\n    params: {\n      system_id: { type: types.cstring },\n    },\n  },\n  bind_transceiver: {\n    id: 0x00000009,\n    params: {\n      system_id: { type: types.cstring },\n      password: { type: types.cstring },\n      system_type: { type: types.cstring },\n      interface_version: { type: types.int8, default: 0x50 },\n      addr_ton: { type: types.int8 },\n      addr_npi: { type: types.int8 },\n      address_range: { type: types.cstring },\n    },\n  },\n  bind_transceiver_resp: {\n    id: 0x80000009,\n    params: {\n      system_id: { type: types.cstring },\n    },\n  },\n  broadcast_sm: {\n    id: 0x00000111,\n    params: {\n      service_type: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      message_id: { type: types.cstring },\n      priority_flag: { type: types.int8 },\n      schedule_delivery_time: { type: types.cstring, filter: filters.time },\n      validity_period: { type: types.cstring, filter: filters.time },\n      replace_if_present_flag: { type: types.int8 },\n      data_coding: { type: types.int8, default: null },\n      sm_default_msg_id: { type: types.int8 },\n    },\n  },\n  broadcast_sm_resp: {\n    id: 0x80000111,\n    params: {\n      message_id: { type: types.cstring },\n    },\n    tlvMap: {\n      broadcast_area_identifier: 'failed_broadcast_area_identifier',\n    },\n  },\n  cancel_broadcast_sm: {\n    id: 0x00000113,\n    params: {\n      service_type: { type: types.cstring },\n      message_id: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n    },\n  },\n  cancel_broadcast_sm_resp: {\n    id: 0x80000113,\n  },\n  cancel_sm: {\n    id: 0x00000008,\n    params: {\n      service_type: { type: types.cstring },\n      message_id: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      dest_addr_ton: { type: types.int8 },\n      dest_addr_npi: { type: types.int8 },\n      destination_addr: { type: types.cstring },\n    },\n  },\n  cancel_sm_resp: {\n    id: 0x80000008,\n  },\n  data_sm: {\n    id: 0x00000103,\n    params: {\n      service_type: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      dest_addr_ton: { type: types.int8 },\n      dest_addr_npi: { type: types.int8 },\n      destination_addr: { type: types.cstring },\n      esm_class: { type: types.int8 },\n      registered_delivery: { type: types.int8 },\n      data_coding: { type: types.int8, default: null },\n    },\n  },\n  data_sm_resp: {\n    id: 0x80000103,\n    params: {\n      message_id: { type: types.cstring },\n    },\n  },\n  deliver_sm: {\n    id: 0x00000005,\n    params: {\n      service_type: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      dest_addr_ton: { type: types.int8 },\n      dest_addr_npi: { type: types.int8 },\n      destination_addr: { type: types.cstring },\n      esm_class: { type: types.int8 },\n      protocol_id: { type: types.int8 },\n      priority_flag: { type: types.int8 },\n      schedule_delivery_time: { type: types.cstring, filter: filters.time },\n      validity_period: { type: types.cstring, filter: filters.time },\n      registered_delivery: { type: types.int8 },\n      replace_if_present_flag: { type: types.int8 },\n      data_coding: { type: types.int8, default: null },\n      sm_default_msg_id: { type: types.int8 },\n      // sm_length: {type: types.int8},\n      short_message: { type: types.buffer, filter: filters.message },\n    },\n  },\n  deliver_sm_resp: {\n    id: 0x80000005,\n    params: {\n      message_id: { type: types.cstring },\n    },\n  },\n  enquire_link: {\n    id: 0x00000015,\n  },\n  enquire_link_resp: {\n    id: 0x80000015,\n  },\n  generic_nack: {\n    id: 0x80000000,\n  },\n  outbind: {\n    id: 0x0000000b,\n    params: {\n      system_id: { type: types.cstring },\n      password: { type: types.cstring },\n    },\n  },\n  query_broadcast_sm: {\n    id: 0x00000112,\n    params: {\n      message_id: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n    },\n  },\n  query_broadcast_sm_resp: {\n    id: 0x80000112,\n    params: {\n      message_id: { type: types.cstring },\n    },\n  },\n  query_sm: {\n    id: 0x00000003,\n    params: {\n      message_id: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n    },\n  },\n  query_sm_resp: {\n    id: 0x80000003,\n    params: {\n      message_id: { type: types.cstring },\n      final_date: { type: types.cstring, filter: filters.time },\n      message_state: { type: types.int8 },\n      error_code: { type: types.int8 },\n    },\n  },\n  replace_sm: {\n    id: 0x00000007,\n    params: {\n      message_id: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      schedule_delivery_time: { type: types.cstring, filter: filters.time },\n      validity_period: { type: types.cstring, filter: filters.time },\n      registered_delivery: { type: types.int8 },\n      sm_default_msg_id: { type: types.int8 },\n      // sm_length: {type: types.int8},\n      short_message: { type: types.buffer, filter: filters.message },\n    },\n  },\n  replace_sm_resp: {\n    id: 0x80000007,\n  },\n  submit_multi: {\n    id: 0x00000021,\n    params: {\n      service_type: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      // number_of_dests: {type: types.int8},\n      dest_address: { type: types.dest_address_array },\n      esm_class: { type: types.int8 },\n      protocol_id: { type: types.int8 },\n      priority_flag: { type: types.int8 },\n      schedule_delivery_time: { type: types.cstring, filter: filters.time },\n      validity_period: { type: types.cstring, filter: filters.time },\n      registered_delivery: { type: types.int8 },\n      replace_if_present_flag: { type: types.int8 },\n      data_coding: { type: types.int8, default: null },\n      sm_default_msg_id: { type: types.int8 },\n      // sm_length: {type: types.int8},\n      short_message: { type: types.buffer, filter: filters.message },\n    },\n  },\n  submit_multi_resp: {\n    id: 0x80000021,\n    params: {\n      message_id: { type: types.cstring },\n      // no_unsuccess: {type: types.int8},\n      unsuccess_sme: { type: types.unsuccess_sme_array },\n    },\n  },\n  submit_sm: {\n    id: 0x00000004,\n    params: {\n      service_type: { type: types.cstring },\n      source_addr_ton: { type: types.int8 },\n      source_addr_npi: { type: types.int8 },\n      source_addr: { type: types.cstring },\n      dest_addr_ton: { type: types.int8 },\n      dest_addr_npi: { type: types.int8 },\n      destination_addr: { type: types.cstring },\n      esm_class: { type: types.int8 },\n      protocol_id: { type: types.int8 },\n      priority_flag: { type: types.int8 },\n      schedule_delivery_time: { type: types.cstring, filter: filters.time },\n      validity_period: { type: types.cstring, filter: filters.time },\n      registered_delivery: { type: types.int8 },\n      replace_if_present_flag: { type: types.int8 },\n      data_coding: { type: types.int8, default: null },\n      sm_default_msg_id: { type: types.int8 },\n      // sm_length: {type: types.int8},\n      short_message: { type: types.buffer, filter: filters.message },\n    },\n  },\n  submit_sm_resp: {\n    id: 0x80000004,\n    params: {\n      message_id: { type: types.cstring },\n    },\n  },\n  unbind: {\n    id: 0x00000006,\n  },\n  unbind_resp: {\n    id: 0x80000006,\n  },\n};\n\nconst commandsById = {};\n\nObject.keys(commands).forEach((command) => {\n  commandsById[commands[command].id] = commands[command];\n  commands[command].command = command;\n});\n// for (var command in commands) {\n//   commandsById[commands[command].id] = commands[command];\n//   commands[command].command = command;\n// }\n\nexport { commands, commandsById };\n"],"file":"commands.js"}